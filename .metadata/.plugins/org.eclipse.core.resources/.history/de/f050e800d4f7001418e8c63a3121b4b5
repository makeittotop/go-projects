package main

import (
    "fmt"
    "net/http"
    "log"
    "io/ioutil"
    "strings"
)

func main() {
	http.HandleFunc("/", func(w http.ResponseWriter, req *http.Request) {
			fmt.Println("==================")
			fmt.Println("Received a req ...")

			// Parse req form
			err := req.ParseForm()
			if err != nil {
				log.Fatal(err.Error())
			}
			
			// Method
			fmt.Printf("Method: %s\n", req.Method)
			
			// Referer
			fmt.Printf("Referer: %s\n", req.Referer());
			
			// Sender
			fmt.Printf("Sender: %s\n", req.RemoteAddr)
			
			// Request Path
			fmt.Printf("Requested URI path: %s\n", req.URL.RequestURI());
			
			// Content length
			fmt.Printf("Content length: %d\n", req.ContentLength)
			
			// Header
			fmt.Printf("Header:\n");
			for k, v := range req.Header {
				fmt.Printf("  %s: %s\n", k, v)
			}
			
			// Body
			body, err := ioutil.ReadAll(req.Body)
			body_str := strings.Trim(string(body), "\n")
			//if body_str != "" {
			fmt.Printf("Body: %s\n", body_str);
			//}
			
			// Form data
			if req.Form != nil {
			    fmt.Println("Form data: ");
			    for k, v := range req.Form {
			        fmt.Printf("  %s -> %s\n", k, v);
			    }
			}
			
			// Post form data
			if req.PostForm != nil {
			    fmt.Println("Post form data: ");
			    for k, v := range req.PostForm {
			        fmt.Printf("  %s -> %s\n", k, v);	
			    }	
			}    	
			
			fmt.Println("==================")

	})
	
	fmt.Println("Starting the web server running on 9999 ...")
	log.Fatal(http.ListenAndServe(":9999", nil))
}
